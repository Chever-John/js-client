# 外部nginx配置 - 代理层（优化Cloudflare环境）
# 请将此配置放在您的外部nginx中
# 
# 架构流程：
# 用户 → Cloudflare (HTTPS) → 外部nginx (HTTP) → 容器内nginx (HTTP) → 静态文件
# 
# 注意事项：
# 1. HTTPS 由 Cloudflare 处理，nginx 只需处理 HTTP
# 2. 已添加 Cloudflare 真实 IP 支持
# 3. 不需要 SSL 证书配置
# 4. 建议在 Cloudflare 中设置 SSL 模式为 "Flexible" 或 "Full"

# 上游服务器配置
upstream ratel_frontend {
    # 代理到容器的8889端口
    server 127.0.0.1:8889;
    keepalive 64;
    keepalive_timeout 65s;
    keepalive_requests 100;
}

# HTTP服务器配置
server {
    listen 80;
    server_name ratel-fe.youdomain.com;
    
    # HTTPS重定向（已注释 - 由Cloudflare处理HTTPS）
    # return 301 https://$server_name$request_uri;
    
    # 代理到容器内的nginx
    location / {
        proxy_pass http://ratel_frontend;
        proxy_http_version 1.1;
        
        # 保持连接
        proxy_set_header Connection "";
        
        # 传递原始请求信息（优化Cloudflare环境）
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cloudflare 真实IP支持
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;
        
        # 安全头设置
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        
        # 缓存控制
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 健康检查直接代理
    location /health {
        proxy_pass http://ratel_frontend;
        access_log off;
    }
}